services:
  wowapi:
    container_name: wowapi
    build:
      dockerfile: Dockerfile
      context: .
    image: wowapi-image
    env_file:
      - .env
    depends_on:
      - pgsdb
    restart: always
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgsdb:${DB_PORT}/pgsdb?schema=public"
    volumes:
      - ./src:/wowapi/src
      - node_modules:/wowapi/node_modules
    command: npm run start:migrate-watch
    expose:
      - ${APP_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - wowapi-network

  pgsdb:
    container_name: pgsdb
    build:
      dockerfile: Dockerfile.psg
      context: .
    env_file:
      - .env
    restart: always
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: pgsdb
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - wowapi-network

networks:
  wowapi-network:
    name: wowapi-network
    driver: bridge

volumes:
  wowapi:
    name: wowapi
  dbdata:
    name: dbdata
  node_modules:
    name: node_modules
